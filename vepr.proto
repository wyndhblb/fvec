
// GENERATED3 with python genproto.py
// Edit at your own risk
syntax = 'proto3';

package github.com.wyndhblb.fvec;

option go_package = "vepr";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/wyndhblb/timeslab/timeslab.proto";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.benchgen_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.populate_all) = true;


// easyjson:json
message Tag {
	string name = 1;
	string value = 2;
}


// VN the base name for a given indexible element
// easyjson:json
message VName {
    // @inject_tag: cql:"key" msg:"key"
	string key = 1;
    // @inject_tag: cql:"res" msg:"res"
	github.com.wyndhblb.timeslab.Resolution resolution = 2;
    // @inject_tag: cql:"ttl" msg:"ttl"
	uint32 ttl = 3;
    // @inject_tag: cql:"-" msg:"-"
	uint64 unique_id = 4 [(gogoproto.customname) = "XUniqueId", (gogoproto.jsontag) = "-"];
    // @inject_tag: cql:"uid" msg:"uid"
	string unique_str = 5 [(gogoproto.customname) = "XUniqueStr", (gogoproto.jsontag) = "-"];
    // @inject_tag: cql:"tags" msg:"tags"
	repeated Tag tags = 11;

}




// VTDblDbl Tuple Type key=double value=double
// easyjson:json
message VTDblDbl{
    // @inject_tag: cql:"k" msg:"key"
    double key = 1;
    // @inject_tag: cql:"v" msg:"value"
    double value = 2;
}


// VTDblInt Tuple Type key=double value=int64
// easyjson:json
message VTDblInt{
    // @inject_tag: cql:"k" msg:"key"
    double key = 1;
    // @inject_tag: cql:"v" msg:"value"
    int64 value = 2;
}


// VTDblStr Tuple Type key=double value=string
// easyjson:json
message VTDblStr{
    // @inject_tag: cql:"k" msg:"key"
    double key = 1;
    // @inject_tag: cql:"v" msg:"value"
    string value = 2;
}


// VTIntDbl Tuple Type key=int64 value=double
// easyjson:json
message VTIntDbl{
    // @inject_tag: cql:"k" msg:"key"
    int64 key = 1;
    // @inject_tag: cql:"v" msg:"value"
    double value = 2;
}


// VTIntInt Tuple Type key=int64 value=int64
// easyjson:json
message VTIntInt{
    // @inject_tag: cql:"k" msg:"key"
    int64 key = 1;
    // @inject_tag: cql:"v" msg:"value"
    int64 value = 2;
}


// VTIntStr Tuple Type key=int64 value=string
// easyjson:json
message VTIntStr{
    // @inject_tag: cql:"k" msg:"key"
    int64 key = 1;
    // @inject_tag: cql:"v" msg:"value"
    string value = 2;
}


// VTStrDbl Tuple Type key=string value=double
// easyjson:json
message VTStrDbl{
    // @inject_tag: cql:"k" msg:"key"
    string key = 1;
    // @inject_tag: cql:"v" msg:"value"
    double value = 2;
}


// VTStrInt Tuple Type key=string value=int64
// easyjson:json
message VTStrInt{
    // @inject_tag: cql:"k" msg:"key"
    string key = 1;
    // @inject_tag: cql:"v" msg:"value"
    int64 value = 2;
}


// VTStrStr Tuple Type key=string value=string
// easyjson:json
message VTStrStr{
    // @inject_tag: cql:"k" msg:"key"
    string key = 1;
    // @inject_tag: cql:"v" msg:"value"
    string value = 2;
}


// VLDbl list
// easyjson:json
message VLDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated double vec = 2;
}


// VLInt list
// easyjson:json
message VLInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated int64 vec = 2;
}


// VLStr list
// easyjson:json
message VLStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated string vec = 2;
}


// VLDblDbl list
// easyjson:json
message VLDblDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTDblDbl vec = 2;
}


// VLDblInt list
// easyjson:json
message VLDblInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTDblInt vec = 2;
}


// VLDblStr list
// easyjson:json
message VLDblStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTDblStr vec = 2;
}


// VLIntDbl list
// easyjson:json
message VLIntDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTIntDbl vec = 2;
}


// VLIntInt list
// easyjson:json
message VLIntInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTIntInt vec = 2;
}


// VLIntStr list
// easyjson:json
message VLIntStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTIntStr vec = 2;
}


// VLStrDbl list
// easyjson:json
message VLStrDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTStrDbl vec = 2;
}


// VLStrInt list
// easyjson:json
message VLStrInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTStrInt vec = 2;
}


// VLStrStr list
// easyjson:json
message VLStrStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTStrStr vec = 2;
}


// VSDbl set
// easyjson:json
message VSDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated double vec = 2;
}


// VSInt set
// easyjson:json
message VSInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated int64 vec = 2;
}


// VSStr set
// easyjson:json
message VSStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated string vec = 2;
}


// VSDblDbl set
// easyjson:json
message VSDblDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTDblDbl vec = 2;
}


// VSDblInt set
// easyjson:json
message VSDblInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTDblInt vec = 2;
}


// VSDblStr set
// easyjson:json
message VSDblStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTDblStr vec = 2;
}


// VSIntDbl set
// easyjson:json
message VSIntDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTIntDbl vec = 2;
}


// VSIntInt set
// easyjson:json
message VSIntInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTIntInt vec = 2;
}


// VSIntStr set
// easyjson:json
message VSIntStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTIntStr vec = 2;
}


// VSStrDbl set
// easyjson:json
message VSStrDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTStrDbl vec = 2;
}


// VSStrInt set
// easyjson:json
message VSStrInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTStrInt vec = 2;
}


// VSStrStr set
// easyjson:json
message VSStrStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    repeated VTStrStr vec = 2;
}


// VMIntDbl map of int64 -> double

message VMIntDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    map<int64, double> vec = 2;
}


// VMIntInt map of int64 -> int64

message VMIntInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    map<int64, int64> vec = 2;
}


// VMIntStr map of int64 -> string

message VMIntStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    map<int64, string> vec = 2;
}


// VMStrDbl map of string -> double
// easyjson:json
message VMStrDbl {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    map<string, double> vec = 2;
}


// VMStrInt map of string -> int64
// easyjson:json
message VMStrInt {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    map<string, int64> vec = 2;
}


// VMStrStr map of string -> string
// easyjson:json
message VMStrStr {
    // @inject_tag: cql:"name" msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec" msg:"vec"
    map<string, string> vec = 2;
}


// VMIntTPDblDbl map of double -> set(double, double)

message VMIntTPDblDbl {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTDblDbl> vec = 2;
}


// VMIntTPDblInt map of double -> set(double, int64)

message VMIntTPDblInt {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTDblInt> vec = 2;
}


// VMIntTPDblStr map of double -> set(double, string)

message VMIntTPDblStr {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTDblStr> vec = 2;
}


// VMIntTPIntDbl map of int64 -> set(int64, double)

message VMIntTPIntDbl {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTIntDbl> vec = 2;
}


// VMIntTPIntInt map of int64 -> set(int64, int64)

message VMIntTPIntInt {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTIntInt> vec = 2;
}


// VMIntTPIntStr map of int64 -> set(int64, string)

message VMIntTPIntStr {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTIntStr> vec = 2;
}


// VMIntTPStrDbl map of string -> set(string, double)

message VMIntTPStrDbl {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTStrDbl> vec = 2;
}


// VMIntTPStrInt map of string -> set(string, int64)

message VMIntTPStrInt {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTStrInt> vec = 2;
}


// VMIntTPStrStr map of string -> set(string, string)

message VMIntTPStrStr {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<int64, VTStrStr> vec = 2;
}


// VMStrTPDblDbl map of double -> set(double, double)
// easyjson:json
message VMStrTPDblDbl {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTDblDbl> vec = 2;
}


// VMStrTPDblInt map of double -> set(double, int64)
// easyjson:json
message VMStrTPDblInt {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTDblInt> vec = 2;
}


// VMStrTPDblStr map of double -> set(double, string)
// easyjson:json
message VMStrTPDblStr {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTDblStr> vec = 2;
}


// VMStrTPIntDbl map of int64 -> set(int64, double)
// easyjson:json
message VMStrTPIntDbl {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTIntDbl> vec = 2;
}


// VMStrTPIntInt map of int64 -> set(int64, int64)
// easyjson:json
message VMStrTPIntInt {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTIntInt> vec = 2;
}


// VMStrTPIntStr map of int64 -> set(int64, string)
// easyjson:json
message VMStrTPIntStr {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTIntStr> vec = 2;
}


// VMStrTPStrDbl map of string -> set(string, double)
// easyjson:json
message VMStrTPStrDbl {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTStrDbl> vec = 2;
}


// VMStrTPStrInt map of string -> set(string, int64)
// easyjson:json
message VMStrTPStrInt {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTStrInt> vec = 2;
}


// VMStrTPStrStr map of string -> set(string, string)
// easyjson:json
message VMStrTPStrStr {
    // @inject_tag: cql:"name", msg:"name"
    VName name = 1;
    // @inject_tag: cql:"vec", msg:"vec"
    map<string, VTStrStr> vec = 2;
}

